{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "WorkloadSpec",
  "type": "object",
  "properties": {
    "sections": {
      "description": "Sections of a workload where a key from one will (probably) not appear in another.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/WorkloadSpecSection"
      }
    }
  },
  "required": [
    "sections"
  ],
  "$defs": {
    "CharacterSet": {
      "type": "string",
      "enum": [
        "alphanumeric"
      ]
    },
    "Distribution": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "uniform": {
              "type": "object",
              "properties": {
                "max": {
                  "type": "number",
                  "format": "float"
                },
                "min": {
                  "type": "number",
                  "format": "float"
                }
              },
              "required": [
                "min",
                "max"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "uniform"
          ]
        },
        {
          "type": "object",
          "properties": {
            "normal": {
              "type": "object",
              "properties": {
                "mean": {
                  "type": "number",
                  "format": "float"
                },
                "std_dev": {
                  "type": "number",
                  "format": "float"
                }
              },
              "required": [
                "mean",
                "std_dev"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "normal"
          ]
        },
        {
          "type": "object",
          "properties": {
            "exponential": {
              "type": "object",
              "properties": {
                "lambda": {
                  "type": "number",
                  "format": "float"
                }
              },
              "required": [
                "lambda"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "exponential"
          ]
        },
        {
          "type": "object",
          "properties": {
            "beta": {
              "type": "object",
              "properties": {
                "alpha": {
                  "type": "number",
                  "format": "float"
                },
                "beta": {
                  "type": "number",
                  "format": "float"
                }
              },
              "required": [
                "alpha",
                "beta"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "beta"
          ]
        },
        {
          "type": "object",
          "properties": {
            "zipf": {
              "type": "object",
              "properties": {
                "n": {
                  "type": "integer",
                  "format": "uint",
                  "minimum": 0
                },
                "s": {
                  "type": "number",
                  "format": "float"
                }
              },
              "required": [
                "n",
                "s"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "zipf"
          ]
        }
      ]
    },
    "EmptyPointDeletes": {
      "description": "Empty point deletes specification.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Number of empty point deletes",
          "$ref": "#/$defs/NumberExpr"
        },
        "key": {
          "description": "Key",
          "$ref": "#/$defs/StringExpr"
        }
      },
      "required": [
        "amount",
        "key"
      ]
    },
    "EmptyPointQueries": {
      "description": "Empty point queries specification.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Number of point queries",
          "$ref": "#/$defs/NumberExpr"
        },
        "key": {
          "description": "Key",
          "$ref": "#/$defs/StringExpr"
        }
      },
      "required": [
        "amount",
        "key"
      ]
    },
    "Inserts": {
      "description": "Inserts specification.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Number of inserts",
          "$ref": "#/$defs/NumberExpr"
        },
        "key": {
          "description": "Key",
          "$ref": "#/$defs/StringExpr"
        },
        "val": {
          "description": "Value",
          "$ref": "#/$defs/StringExpr"
        }
      },
      "required": [
        "amount",
        "key",
        "val"
      ]
    },
    "KeyDistribution": {
      "description": "Different selection strategies for keys in a workload.",
      "type": "string",
      "enum": [
        "uniform"
      ]
    },
    "NumberExpr": {
      "anyOf": [
        {
          "type": "number",
          "format": "float"
        },
        {
          "$ref": "#/$defs/Distribution"
        }
      ]
    },
    "PointDeletes": {
      "description": "Non-empty point deletes specification.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Number of non-empty point deletes",
          "$ref": "#/$defs/NumberExpr"
        }
      },
      "required": [
        "amount"
      ]
    },
    "PointQueries": {
      "description": "Non-empty point queries specification.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Number of point queries",
          "$ref": "#/$defs/NumberExpr"
        }
      },
      "required": [
        "amount"
      ]
    },
    "RangeDeletes": {
      "description": "Range deletes specification.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Number of range deletes",
          "$ref": "#/$defs/NumberExpr"
        },
        "selectivity": {
          "description": "Selectivity of range deletes. Based off of the range of valid keys, not the full key space.",
          "$ref": "#/$defs/NumberExpr"
        }
      },
      "required": [
        "amount",
        "selectivity"
      ]
    },
    "RangeQueries": {
      "description": "Range queries specification.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Number of range queries",
          "$ref": "#/$defs/NumberExpr"
        },
        "selectivity": {
          "description": "Selectivity of range queries. Based off of the range of valid keys, not the full key-space.",
          "$ref": "#/$defs/NumberExpr"
        }
      },
      "required": [
        "amount",
        "selectivity"
      ]
    },
    "StringExpr": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "constant": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "constant"
          ]
        },
        {
          "type": "object",
          "properties": {
            "sampled": {
              "type": "object",
              "properties": {
                "character_set": {
                  "description": "The character set to use for sampling the string.",
                  "$ref": "#/$defs/CharacterSet"
                },
                "length": {
                  "description": "The distribution to use for sampling the string.\nThe length of the string to sample.",
                  "$ref": "#/$defs/NumberExpr"
                }
              },
              "required": [
                "length",
                "character_set"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "sampled"
          ]
        },
        {
          "type": "object",
          "properties": {
            "weighted": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/Weight"
              }
            }
          },
          "additionalProperties": false,
          "required": [
            "weighted"
          ]
        },
        {
          "type": "object",
          "properties": {
            "segmented": {
              "type": "object",
              "properties": {
                "segments": {
                  "description": "The segments to use for the string.",
                  "type": "array",
                  "items": {
                    "$ref": "#/$defs/StringExpr"
                  }
                },
                "separator": {
                  "type": "string"
                }
              },
              "required": [
                "separator",
                "segments"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "segmented"
          ]
        },
        {
          "type": "object",
          "properties": {
            "hot_range": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "uint",
                  "minimum": 0
                },
                "length": {
                  "type": "integer",
                  "format": "uint",
                  "minimum": 0
                },
                "probability": {
                  "type": "number",
                  "format": "float"
                }
              },
              "required": [
                "length",
                "count",
                "probability"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "hot_range"
          ]
        }
      ]
    },
    "Updates": {
      "description": "Updates specification.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Number of updates",
          "$ref": "#/$defs/NumberExpr"
        },
        "val": {
          "description": "Value",
          "$ref": "#/$defs/StringExpr"
        }
      },
      "required": [
        "amount",
        "val"
      ]
    },
    "Weight": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the item.",
          "$ref": "#/$defs/StringExpr"
        },
        "weight": {
          "description": "The weight of the item.",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "weight",
        "value"
      ]
    },
    "WorkloadSpecGroup": {
      "type": "object",
      "properties": {
        "empty_point_deletes": {
          "anyOf": [
            {
              "$ref": "#/$defs/EmptyPointDeletes"
            },
            {
              "type": "null"
            }
          ]
        },
        "empty_point_queries": {
          "anyOf": [
            {
              "$ref": "#/$defs/EmptyPointQueries"
            },
            {
              "type": "null"
            }
          ]
        },
        "inserts": {
          "anyOf": [
            {
              "$ref": "#/$defs/Inserts"
            },
            {
              "type": "null"
            }
          ]
        },
        "point_deletes": {
          "anyOf": [
            {
              "$ref": "#/$defs/PointDeletes"
            },
            {
              "type": "null"
            }
          ]
        },
        "point_queries": {
          "anyOf": [
            {
              "$ref": "#/$defs/PointQueries"
            },
            {
              "type": "null"
            }
          ]
        },
        "range_deletes": {
          "anyOf": [
            {
              "$ref": "#/$defs/RangeDeletes"
            },
            {
              "type": "null"
            }
          ]
        },
        "range_queries": {
          "anyOf": [
            {
              "$ref": "#/$defs/RangeQueries"
            },
            {
              "type": "null"
            }
          ]
        },
        "updates": {
          "anyOf": [
            {
              "$ref": "#/$defs/Updates"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "WorkloadSpecSection": {
      "type": "object",
      "properties": {
        "character_set": {
          "description": "The domain from which the keys will be created from.",
          "$ref": "#/$defs/CharacterSet"
        },
        "groups": {
          "description": "A list of groups. Groups share valid keys between operations.\n\nE.g., non-empty point queries will use a key from an insert in this group.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/WorkloadSpecGroup"
          }
        },
        "key_distribution": {
          "description": "The domain from which the keys will be created from.",
          "$ref": "#/$defs/KeyDistribution"
        },
        "skip_key_contains_check": {
          "description": "Whether to skip the check that a generated key is in the valid key set for inserts and empty point queries/deletes.\n\nThis is useful when the keyspace is much larger than the number of keys being generated, as it can greatly decrease generation time.",
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "groups"
      ]
    }
  }
}
